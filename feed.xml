<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://joshuaw03628.github.io/Repository-1/feed.xml" rel="self" type="application/atom+xml" /><link href="https://joshuaw03628.github.io/Repository-1/" rel="alternate" type="text/html" /><updated>2022-08-30T14:16:31-05:00</updated><id>https://joshuaw03628.github.io/Repository-1/feed.xml</id><title type="html">Joshâ€™s blog</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Notetaker</title><link href="https://joshuaw03628.github.io/Repository-1/2022/08/30/Notetaker.ipynb" rel="alternate" type="text/html" title="Notetaker" /><published>2022-08-30T00:00:00-05:00</published><updated>2022-08-30T00:00:00-05:00</updated><id>https://joshuaw03628.github.io/Repository-1/2022/08/30/Notetaker</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "markdown", "metadata": {}, "source": [ "---\n", "toc: false\n", "layout: post\n", "description: The post for Dict./Title\n", "categories: [markdown]\n", "title: Formatting for Titles/Dictionary\n", "---\n", "# Format Code to Run This:\n", "## Define an empty List called InfoDb\n", "InfoDb = []\n", "\n", "## Append to List a Dictionary of key/values related to a person and cars\n", "InfoDb.append({\n", " \"FirstName\": \"Josh\",\n", " \"LastName\": \"Williams\",\n", " \"DOB\": \"January 6\",\n", " \"Residence\": \"San Diego\",\n", " \"Email\": \"joshuawilliams52006@gmail.com\",\n", " \"Owns_Cars\": [\"2011-Nissan Versa\"],\n", " \"Favorite Games\": [\"Apex-Legends\"]\n", "})\n", "\n", "## Append to List a 2nd Dictionary of key/values\n", "InfoDb.append({\n", " \"FirstName\": \"Ryan\",\n", " \"LastName\": \"Mcweeny\",\n", " \"DOB\": \"March 27\",\n", " \"Residence\": \"San Diego\",\n", " \"Email\": \"N/A\",\n", " \"Owns_Cars\": [\"Lamborghini\"],\n", " \"Favorite_Show\": [\"CocoMelon\"]\n", "})\n", "\n", "## Print the data structure\n", "print(InfoDb)\n", "\n", "\n", "# Lets Make This Look Nicer\n", "\n", "## given and index this will print InfoDb content\n", "def print_data(d_rec):\n", " print(d_rec[\"FirstName\"], d_rec[\"LastName\"]) # using comma puts space between values\n", " print(\"\\t\", \"Residence:\", d_rec[\"Residence\"]) # \\t is a tab indent\n", " print(\"\\t\", \"Birth Day:\", d_rec[\"DOB\"])\n", " print(\"\\t\", \"Cars: \", end=\"\") # end=\"\" make sure no return occurs\n", " print(\", \".join(d_rec[\"Owns_Cars\"])) # join allows printing a string list with separator\n", " print()\n", "\n", "\n", "## for loop iterates on length of InfoDb\n", "def for_loop():\n", " print(\"For loop output\\n\")\n", " for record in InfoDb:\n", " print_data(record)\n", "\n", "for_loop()\n" ] }, { "cell_type": "code", "execution_count": 1, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "[{'FirstName': 'Josh', 'LastName': 'Williams', 'DOB': 'January 6', 'Residence': 'San Diego', 'Email': 'joshuawilliams52006@gmail.com', 'Owns_Cars': ['2011-Nissan Versa'], 'Favorite Games': ['Apex-Legends']}, {'FirstName': 'Ryan', 'LastName': 'Mcweeny', 'DOB': 'March 27', 'Residence': 'San Diego', 'Email': 'N/A', 'Owns_Cars': ['Lamborghini'], 'Favorite_Show': ['CocoMelon']}]\n" ] } ], "source": [ "# Define an empty List called InfoDb\n", "InfoDb = []\n", "\n", "# Append to List a Dictionary of key/values related to a person and cars\n", "InfoDb.append({\n", " \"FirstName\": \"Josh\",\n", " \"LastName\": \"Williams\",\n", " \"DOB\": \"January 6\",\n", " \"Residence\": \"San Diego\",\n", " \"Email\": \"joshuawilliams52006@gmail.com\",\n", " \"Owns_Cars\": [\"2011-Nissan Versa\"],\n", " \"Favorite Games\": [\"Apex-Legends\"]\n", "})\n", "\n", "# Append to List a 2nd Dictionary of key/values\n", "InfoDb.append({\n", " \"FirstName\": \"Ryan\",\n", " \"LastName\": \"Mcweeny\",\n", " \"DOB\": \"March 27\",\n", " \"Residence\": \"San Diego\",\n", " \"Email\": \"N/A\",\n", " \"Owns_Cars\": [\"Lamborghini\"],\n", " \"Favorite_Show\": [\"CocoMelon\"]\n", "})\n", "\n", "# Print the data structure\n", "print(InfoDb)" ] }, { "cell_type": "code", "execution_count": 2, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "For loop output\n", "\n", "Josh Williams\n", "\t Residence: San Diego\n", "\t Birth Day: January 6\n", "\t Cars: 2011-Nissan Versa\n", "\n", "Ryan Mcweeny\n", "\t Residence: San Diego\n", "\t Birth Day: March 27\n", "\t Cars: Lamborghini\n", "\n" ] } ], "source": [ "# given and index this will print InfoDb content\n", "def print_data(d_rec):\n", " print(d_rec[\"FirstName\"], d_rec[\"LastName\"]) # using comma puts space between values\n", " print(\"\\t\", \"Residence:\", d_rec[\"Residence\"]) # \\t is a tab indent\n", " print(\"\\t\", \"Birth Day:\", d_rec[\"DOB\"])\n", " print(\"\\t\", \"Cars: \", end=\"\") # end=\"\" make sure no return occurs\n", " print(\", \".join(d_rec[\"Owns_Cars\"])) # join allows printing a string list with separator\n", " print()\n", "\n", "\n", "# for loop iterates on length of InfoDb\n", "def for_loop():\n", " print(\"For loop output\\n\")\n", " for record in InfoDb:\n", " print_data(record)\n", "\n", "for_loop()" ] } ], "metadata": { "kernelspec": { "display_name": "Python 3.10.6 64-bit", "language": "python", "name": "python3" }, "language_info": { "codemirror_mode": { "name": "ipython", "version": 3 }, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.10.6" }, "orig_nbformat": 4, "vscode": { "interpreter": { "hash": "b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e" } } }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Alumni Notes</title><link href="https://joshuaw03628.github.io/Repository-1/markdown/2022/08/29/markdownAlumnNotes.html" rel="alternate" type="text/html" title="Alumni Notes" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://joshuaw03628.github.io/Repository-1/markdown/2022/08/29/markdownAlumnNotes</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[Notes I took at the Alumni Gathering]]></summary></entry><entry><title type="html">An Example Picture Post</title><link href="https://joshuaw03628.github.io/Repository-1/markdown/2022/08/29/MarkdownImage.html" rel="alternate" type="text/html" title="An Example Picture Post" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://joshuaw03628.github.io/Repository-1/markdown/2022/08/29/MarkdownImage</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[An Example Picture]]></summary></entry><entry><title type="html">NBA Quiz</title><link href="https://joshuaw03628.github.io/Repository-1/fastpages/jupyter/bash/2022/08/28/pythonquiz.html" rel="alternate" type="text/html" title="NBA Quiz" /><published>2022-08-28T00:00:00-05:00</published><updated>2022-08-28T00:00:00-05:00</updated><id>https://joshuaw03628.github.io/Repository-1/fastpages/jupyter/bash/2022/08/28/-pythonquiz</id><author><name>Josh Williams</name></author><category term="fastpages" /><category term="jupyter" /><category term="bash" /><summary type="html"><![CDATA[This is a jupyter notebook quiz]]></summary></entry><entry><title type="html">Bash Notebook</title><link href="https://joshuaw03628.github.io/Repository-1/fastpages/jupyter/bash/2022/08/26/Bash-Notebook.html" rel="alternate" type="text/html" title="Bash Notebook" /><published>2022-08-26T00:00:00-05:00</published><updated>2022-08-26T00:00:00-05:00</updated><id>https://joshuaw03628.github.io/Repository-1/fastpages/jupyter/bash/2022/08/26/Bash-Notebook</id><author><name>Josh Williams</name></author><category term="fastpages" /><category term="jupyter" /><category term="bash" /><summary type="html"><![CDATA[This is a jupyter notebook created using bash that will show all of the key tools installed.]]></summary></entry></feed>